{"version":3,"file":"background/service-worker.js","mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://hiccup/./background/service-worker.ts"],"sourcesContent":["\"use strict\";\n// when the user clicks the extension icon:\nchrome.action.onClicked.addListener(async (tab) => {\n    if (!tab.url)\n        return;\n    const url = new URL(tab.url);\n    await chrome.sidePanel.setOptions({\n        tabId: tab.id,\n        path: \"sidepanel/sidepanel.html\",\n        enabled: true\n    });\n    if (tab.id) {\n        await chrome.sidePanel.open({ tabId: tab.id });\n    }\n    // remember this origin for future visits\n    await saveEnabledOrigin(url.origin);\n    console.log(url.origin);\n});\nchrome.runtime.onMessage.addListener((message) => {\n    if (message.type == \"sp_Opened\") {\n        console.log(\"open MessageRecieved\");\n    }\n    if (message.type == \"sp_Closed\") {\n        console.log(\"close MessageRecieved\");\n    }\n});\n// list of origins where the user previously opened the side panel\nasync function saveEnabledOrigin(origin) {\n    const enabledOrigins = await getEnabledOrigins();\n    if (!enabledOrigins.includes(origin)) {\n        enabledOrigins.push(origin);\n        await chrome.storage.local.set({ enabledOrigins });\n    }\n}\nasync function getEnabledOrigins() {\n    const data = await chrome.storage.local.get(\"enabledOrigins\");\n    return data.enabledOrigins || [];\n}\n"],"names":[],"sourceRoot":""}